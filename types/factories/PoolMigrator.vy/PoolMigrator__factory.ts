/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PoolMigrator,
  PoolMigratorInterface,
} from "../../PoolMigrator.vy/PoolMigrator";
import type { PromiseOrValue } from "../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "migrate_to_new_pool",
    inputs: [
      {
        name: "_old_pool",
        type: "address",
      },
      {
        name: "_new_pool",
        type: "address",
      },
      {
        name: "_amount",
        type: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
] as const;

const _bytecode =
  "0x61020656600436101561000d576101f7565b600035601c52600051346101fd5763c1c4d12b8114156101f55760043560a01c6101fd5760243560a01c6101fd57602061020060646323b872dd61014052336101605230610180526044356101a05261015c60006004355af1156101fd57601f3d11156101fd576000506102005060406102406064635b36389c610180526044356101a05260006101c05260006101e05261019c60006004355af1156101fd57603f3d11156101fd5760005061024080516101405280602001516101605250600060243560e05260c052604060c020546101a25761018060006002818352015b6020610240602463c66106576101c052610180516101e0526101dc6024355afa156101fd57601f3d11156101fd57600050610240516101a0526101a0513b156101fd5760006000604463095ea7b36101c0526024356101e0527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610200526101dc60006101a0515af1156101fd575b81516001018083528114156100ed575b50506001600060243560e05260c052604060c020555b60206102606084630c3e4b5461018052610140516101a052610160516101c05260006101e052336102005261019c60006024355af1156101fd57601f3d11156101fd576000506102605160005260206000f35b505b60006000fd5b600080fd5b61000461020603610004600039610004610206036000f3";

type PoolMigratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolMigratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolMigrator__factory extends ContractFactory {
  constructor(...args: PoolMigratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolMigrator> {
    return super.deploy(overrides || {}) as Promise<PoolMigrator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolMigrator {
    return super.attach(address) as PoolMigrator;
  }
  override connect(signer: Signer): PoolMigrator__factory {
    return super.connect(signer) as PoolMigrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolMigratorInterface {
    return new utils.Interface(_abi) as PoolMigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolMigrator {
    return new Contract(address, _abi, signerOrProvider) as PoolMigrator;
  }
}
