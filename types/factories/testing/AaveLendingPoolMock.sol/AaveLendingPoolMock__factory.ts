/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  AaveLendingPoolMock,
  AaveLendingPoolMockInterface,
} from "../../../testing/AaveLendingPoolMock.sol/AaveLendingPoolMock";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "_aToken",
        type: "address",
      },
    ],
    name: "_add_token",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_referralCode",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "lastReferral",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061036a806100206000396000f3fe60806040526004361061003f5760003560e01c806369328dec14610044578063e8eda9df14610089578063f6b3b485146100c8578063fdcc6363146100f4575b600080fd5b34801561005057600080fd5b506100876004803603606081101561006757600080fd5b506001600160a01b0381358116916020810135916040909101351661012f565b005b6100876004803603608081101561009f57600080fd5b5080356001600160a01b0390811691602081013591604082013516906060013561ffff166101d5565b3480156100d457600080fd5b506100dd6102fd565b6040805161ffff9092168252519081900360200190f35b34801561010057600080fd5b506100876004803603604081101561011757600080fd5b506001600160a01b0381358116916020013516610307565b6001600160a01b038381166000908152600160205260409020541661015357600080fd5b6001600160a01b03808416600090815260016020526040808220548151630e6dfcd560e01b81523360048201528585166024820152604481018790529151931692630e6dfcd59260648084019391929182900301818387803b1580156101b857600080fd5b505af11580156101cc573d6000803e3d6000fd5b50505050505050565b6001600160a01b03848116600090815260016020526040902054166101f957600080fd5b6000805461ffff191661ffff83161781556001600160a01b03858116808352600160205260408084205481516323b872dd60e01b8152878516600482015293166024840152604483018790525190926323b872dd926064808201939182900301818387803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b5050506001600160a01b038086166000908152600160205260408082205481516340c10f1960e01b81528785166004820152602481018990529151931693506340c10f19926044808301939282900301818387803b1580156102df57600080fd5b505af11580156102f3573d6000803e3d6000fd5b5050505050505050565b60005461ffff1681565b6001600160a01b03918216600090815260016020526040902080546001600160a01b0319169190921617905556fea265627a7a7231582005c33cdca1f33fa538d180cd220b500a6f76afe5aa79d89b9acd286838ee758264736f6c63430005110032";

type AaveLendingPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AaveLendingPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AaveLendingPoolMock__factory extends ContractFactory {
  constructor(...args: AaveLendingPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AaveLendingPoolMock> {
    return super.deploy(overrides || {}) as Promise<AaveLendingPoolMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AaveLendingPoolMock {
    return super.attach(address) as AaveLendingPoolMock;
  }
  override connect(signer: Signer): AaveLendingPoolMock__factory {
    return super.connect(signer) as AaveLendingPoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveLendingPoolMockInterface {
    return new utils.Interface(_abi) as AaveLendingPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveLendingPoolMock {
    return new Contract(address, _abi, signerOrProvider) as AaveLendingPoolMock;
  }
}
