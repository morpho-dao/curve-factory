/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  ATokenMock,
  ATokenMockInterface,
} from "../../../testing/aERC20.sol/ATokenMock";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lendingPool",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "_get_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_mint_for_testing",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "_set_pool",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "set_exchange_rate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e2938038062000e29833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040908152602082810151918301516060909301518651929550929350620001c79160009187019062000289565b508451620001dd90600190602088019062000289565b506002839055600780546001600160a01b038085166001600160a01b0319928316811790935560068054918516919092168117909155670de0b6b3a76400006005556040805163fdcc636360e01b8152600481019390935230602484015251909163fdcc636391604480830192600092919082900301818387803b1580156200026557600080fd5b505af11580156200027a573d6000803e3d6000fd5b5050505050505050506200032e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002cc57805160ff1916838001178555620002fc565b82800160010185558215620002fc579182015b82811115620002fc578251825591602001919060010190620002df565b506200030a9291506200030e565b5090565b6200032b91905b808211156200030a576000815560010162000315565b90565b610aeb806200033e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f1911610097578063a9059cbb11610066578063a9059cbb146102e4578063cf4f29d814610310578063dd62ed3e14610318578063f8c1410214610346576100f5565b806340c10f191461026457806370a08231146102905780637cb2566c146102b657806395d89b41146102dc576100f5565b80630e6dfcd5116100d35780630e6dfcd5146101d657806318160ddd1461020c57806323b872dd14610226578063313ce5671461025c576100f5565b806306fdde03146100fa578063095ea7b3146101775780630e216fe9146101b7575b600080fd5b610102610372565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103ff565b604080519115158252519081900360200190f35b6101d4600480360360208110156101cd57600080fd5b5035610471565b005b6101d4600480360360608110156101ec57600080fd5b506001600160a01b03813581169160208101359091169060400135610527565b61021461061e565b60408051918252519081900360200190f35b6101a36004803603606081101561023c57600080fd5b506001600160a01b03813581169160208101359091169060400135610624565b610214610724565b6101d46004803603604081101561027a57600080fd5b506001600160a01b03813516906020013561072a565b610214600480360360208110156102a657600080fd5b50356001600160a01b03166107ce565b6101d4600480360360208110156102cc57600080fd5b50356001600160a01b03166107e9565b61010261080b565b6101a3600480360360408110156102fa57600080fd5b506001600160a01b038135169060200135610866565b61021461090c565b6102146004803603604081101561032e57600080fd5b506001600160a01b0381358116916020013516610912565b6101d46004803603604081101561035c57600080fd5b506001600160a01b03813516906020013561093d565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b505050505081565b3360008181526009602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528281018490525190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925919081900360600190a15060015b92915050565b6004546001600160a01b031660009081526008602052604090205460035461049e9163ffffffff610a3116565b6003556004546001600160a01b03166000908152600860205260409020546104e690670de0b6b3a7640000906104da908463ffffffff610a4616565b9063ffffffff610a6716565b600480546001600160a01b0390811660009081526008602052604080822094909455915416815220546003546105219163ffffffff610a8616565b60035550565b60035461053a908263ffffffff610a3116565b6003556001600160a01b038316600090815260086020526040902054610566908263ffffffff610a3116565b6001600160a01b0380851660009081526008602052604080822093909355600754835163a9059cbb60e01b8152868416600482015260248101869052935192169263a9059cbb926044808301939282900301818387803b1580156105c957600080fd5b505af11580156105dd573d6000803e3d6000fd5b5050604080516001600160a01b0387168152600060208201528082018590529051600080516020610a978339815191529350908190036060019150a1505050565b60035481565b6001600160a01b03831660009081526008602052604081205461064d908363ffffffff610a3116565b6001600160a01b038516600090815260086020908152604080832093909355600981528282203383529052205461068a908363ffffffff610a3116565b6001600160a01b0380861660009081526009602090815260408083203384528252808320949094559186168152600890915220546106ce908363ffffffff610a8616565b6001600160a01b038085166000818152600860209081526040918290209490945580519288168352928201528082018490529051600080516020610a978339815191529181900360600190a15060019392505050565b60025481565b6006546001600160a01b0316331461074157600080fd5b600354610754908263ffffffff610a8616565b6003556001600160a01b038216600090815260086020526040902054610780908263ffffffff610a8616565b6001600160a01b03831660008181526008602090815260408083209490945583519182528101919091528082018390529051600080516020610a978339815191529181900360600190a15050565b6001600160a01b031660009081526008602052604090205490565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b33600090815260086020526040812054610886908363ffffffff610a3116565b33600090815260086020526040808220929092556001600160a01b038516815220546108b8908363ffffffff610a8616565b6001600160a01b0384166000818152600860209081526040918290209390935580513381529283019190915281810184905251600080516020610a978339815191529181900360600190a150600192915050565b60055481565b6001600160a01b03918216600090815260096020908152604080832093909416825291909152205490565b600354610950908263ffffffff610a8616565b6003556001600160a01b03821660009081526008602052604090205461097c908263ffffffff610a8616565b6001600160a01b03808416600090815260086020526040808220939093556007548351637c60a08160e11b815230600482015260248101869052935192169263f8c14102926044808301939282900301818387803b1580156109dd57600080fd5b505af11580156109f1573d6000803e3d6000fd5b505060408051600081526001600160a01b03861660208201528082018590529051600080516020610a978339815191529350908190036060019150a15050565b600082821115610a4057600080fd5b50900390565b818102821580610a5e575081838281610a5b57fe5b04145b61046b57600080fd5b6000808211610a7557600080fd5b818381610a7e57fe5b049392505050565b8181018281101561046b57600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa265627a7a72315820e035907e3f4cd52c45ad4fdf14c52147cd80bce590075e2cb7b689fe00976c2564736f6c63430005110032";

type ATokenMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ATokenMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ATokenMock__factory extends ContractFactory {
  constructor(...args: ATokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    _underlyingToken: PromiseOrValue<string>,
    _lendingPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ATokenMock> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _underlyingToken,
      _lendingPool,
      overrides || {}
    ) as Promise<ATokenMock>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    _underlyingToken: PromiseOrValue<string>,
    _lendingPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _underlyingToken,
      _lendingPool,
      overrides || {}
    );
  }
  override attach(address: string): ATokenMock {
    return super.attach(address) as ATokenMock;
  }
  override connect(signer: Signer): ATokenMock__factory {
    return super.connect(signer) as ATokenMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ATokenMockInterface {
    return new utils.Interface(_abi) as ATokenMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ATokenMock {
    return new Contract(address, _abi, signerOrProvider) as ATokenMock;
  }
}
