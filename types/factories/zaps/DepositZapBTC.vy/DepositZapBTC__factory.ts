/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  DepositZapBTC,
  DepositZapBTCInterface,
} from "../../../zaps/DepositZapBTC.vy/DepositZapBTC";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [],
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "add_liquidity",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_deposit_amounts",
        type: "uint256[4]",
      },
      {
        name: "_min_mint_amount",
        type: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "add_liquidity",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_deposit_amounts",
        type: "uint256[4]",
      },
      {
        name: "_min_mint_amount",
        type: "uint256",
      },
      {
        name: "_receiver",
        type: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_burn_amount",
        type: "uint256",
      },
      {
        name: "_min_amounts",
        type: "uint256[4]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[4]",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_burn_amount",
        type: "uint256",
      },
      {
        name: "_min_amounts",
        type: "uint256[4]",
      },
      {
        name: "_receiver",
        type: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[4]",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity_one_coin",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_burn_amount",
        type: "uint256",
      },
      {
        name: "i",
        type: "int128",
      },
      {
        name: "_min_amount",
        type: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity_one_coin",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_burn_amount",
        type: "uint256",
      },
      {
        name: "i",
        type: "int128",
      },
      {
        name: "_min_amount",
        type: "uint256",
      },
      {
        name: "_receiver",
        type: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity_imbalance",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_amounts",
        type: "uint256[4]",
      },
      {
        name: "_max_burn_amount",
        type: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity_imbalance",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_amounts",
        type: "uint256[4]",
      },
      {
        name: "_max_burn_amount",
        type: "uint256",
      },
      {
        name: "_receiver",
        type: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    name: "calc_withdraw_one_coin",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_token_amount",
        type: "uint256",
      },
      {
        name: "i",
        type: "int128",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    name: "calc_token_amount",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_amounts",
        type: "uint256[4]",
      },
      {
        name: "_is_deposit",
        type: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
] as const;

const _bytecode =
  "";

type DepositZapBTCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositZapBTCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositZapBTC__factory extends ContractFactory {
  constructor(...args: DepositZapBTCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositZapBTC> {
    return super.deploy(overrides || {}) as Promise<DepositZapBTC>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DepositZapBTC {
    return super.attach(address) as DepositZapBTC;
  }
  override connect(signer: Signer): DepositZapBTC__factory {
    return super.connect(signer) as DepositZapBTC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositZapBTCInterface {
    return new utils.Interface(_abi) as DepositZapBTCInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositZapBTC {
    return new Contract(address, _abi, signerOrProvider) as DepositZapBTC;
  }
}
