/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  DepositZapMorphoAaveV2USD,
  DepositZapMorphoAaveV2USDInterface,
} from "../../../zaps/DepositZapMorphoAaveV2USD.vy/DepositZapMorphoAaveV2USD";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [],
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "add_liquidity",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_deposit_amounts",
        type: "uint256[3]",
      },
      {
        name: "_min_mint_amount",
        type: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "add_liquidity",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_deposit_amounts",
        type: "uint256[3]",
      },
      {
        name: "_min_mint_amount",
        type: "uint256",
      },
      {
        name: "_receiver",
        type: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_burn_amount",
        type: "uint256",
      },
      {
        name: "_min_amounts",
        type: "uint256[3]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[3]",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_burn_amount",
        type: "uint256",
      },
      {
        name: "_min_amounts",
        type: "uint256[3]",
      },
      {
        name: "_receiver",
        type: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[3]",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity_one_coin",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_burn_amount",
        type: "uint256",
      },
      {
        name: "i",
        type: "int128",
      },
      {
        name: "_min_amount",
        type: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity_one_coin",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_burn_amount",
        type: "uint256",
      },
      {
        name: "i",
        type: "int128",
      },
      {
        name: "_min_amount",
        type: "uint256",
      },
      {
        name: "_receiver",
        type: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity_imbalance",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_amounts",
        type: "uint256[3]",
      },
      {
        name: "_max_burn_amount",
        type: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "remove_liquidity_imbalance",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_amounts",
        type: "uint256[3]",
      },
      {
        name: "_max_burn_amount",
        type: "uint256",
      },
      {
        name: "_receiver",
        type: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    name: "calc_withdraw_one_coin",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_token_amount",
        type: "uint256",
      },
      {
        name: "i",
        type: "int128",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    name: "calc_token_amount",
    inputs: [
      {
        name: "_pool",
        type: "address",
      },
      {
        name: "_amounts",
        type: "uint256[3]",
      },
      {
        name: "_is_deposit",
        type: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
  },
] as const;

const _bytecode =
  "";

type DepositZapMorphoAaveV2USDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositZapMorphoAaveV2USDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositZapMorphoAaveV2USD__factory extends ContractFactory {
  constructor(...args: DepositZapMorphoAaveV2USDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositZapMorphoAaveV2USD> {
    return super.deploy(overrides || {}) as Promise<DepositZapMorphoAaveV2USD>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DepositZapMorphoAaveV2USD {
    return super.attach(address) as DepositZapMorphoAaveV2USD;
  }
  override connect(signer: Signer): DepositZapMorphoAaveV2USD__factory {
    return super.connect(signer) as DepositZapMorphoAaveV2USD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositZapMorphoAaveV2USDInterface {
    return new utils.Interface(_abi) as DepositZapMorphoAaveV2USDInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositZapMorphoAaveV2USD {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DepositZapMorphoAaveV2USD;
  }
}
